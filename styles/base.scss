// To enable support for browsers that do not support @media queries, 
// (IE <= 8, Firefox <= 3, Opera <= 9) set $mq-responsive to false 
// Create a separate stylesheet served exclusively to these browsers, 
// meaning @media queries will be rasterized, relying on the cascade itself 
$mq-responsive: true;
 
// Name your breakpoints in a way that creates a ubiquitous language 
// across team members. It will improve communication between 
// stakeholders, designers, developers, and testers. 
$mq-breakpoints: (
    mobile:  20em,
    mobile-w: 30em,
    tablet:  48em,
    tablet-w: 64em,
    desktop: 76.5em,
    wide:    114em,
 
    // Tweakpoints
    desktopAd: 810px,
    mobileLandscape: 480px
);
 
// Define the breakpoint from the $mq-breakpoints list that should 
// be used as the target width when outputting a static stylesheet 
// (when $mq-responsive is set to 'false'). 
$mq-static-breakpoint: desktop;
 
// If you want to display the currently active breakpoint in the top 
// right corner of your site during development, add the breakpoints 
// to this list, ordered by width. For example: (mobile, tablet, desktop). 
$mq-show-breakpoints: (mobile, mobileLandscape, tablet, desktop, wide);


// With webpack (and boilerplates such as create-react-app) 
@import '~sass-mq';
@import '../fonts/AlexBrush-Regular.ttf';
@import './animations';

body {
    
}

* {
    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6 {
    font-family: "Arial", sans-serif;
    margin: 0;
    line-height: 1;
}

h1 {
    font-size: 4em;
}

h2 {
    font-size: 3.75em;

    @include mq($from: tablet-w) {
        font-size: 6.5vw;
    }
}

body {
    font-family: "Roboto", sans-serif;
    margin: 0;
    border: 0;
    padding: 0;
}

a {
    font-family: "Roboto", sans-serif;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
}

%button {
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    height: 2em;
    padding: 0 0.625em;
    border: 2px solid transparent;
    background-color: #e19627;
    color: black;
    transition: background-color 0.5s ease, color 0.5s ease, border 0.5s ease;

    &:hover,
    &:focus {
        background-color: black;
        color: white;
        border: 2px solid #e19627;
    }
}

button,
[type="button"],
[button="button"],
[role="button"] {
    @extend %button;
}

.button {
    @extend %button;

    &--elegant {
        background-color: transparent;
        border: 2px solid #B5FFE1;
        color: #B5FFE1;
        height: 2.25em;

        &:hover,
        &:focus {
            background-color: #272838;
            border: 2px solid #B5FFE1;
            color: #B5FFE1;
        }
    }

}

p {
    margin: 0;
}

ul {
    list-style: none;
    margin: 0;
    padding: 0;
}


%accessibility-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    border: 0;
}

%wrapper--tablet-w {
    @include mq($from: tablet-w) {
        margin: 0 auto;
        padding: 0 4em;
        max-width: 80em;
    }
}

%wrapper--mobile {
    @include mq($until: tablet-w) {
        margin: 0 auto;
        padding: 0 3.1%;
        max-width: 80em;
    }
}

%wrapper {
    @extend %wrapper--mobile;
    @extend %wrapper--tablet-w;
}

.accessibility-hidden {
    @extend %accessibility-hidden;
}

@font-face {
	font-family: "AlexBrush";
	src: url("/fonts/AlexBrush-Regular.ttf") format("truetype"),
}